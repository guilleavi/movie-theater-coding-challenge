{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/movies/components/details-view/details-view.component.ts","./src/app/movies/components/details-view/details-view.component.html","./src/app/movies/components/search-bar/search-bar.component.ts","./src/app/movies/components/search-bar/search-bar.component.html","./src/app/movies/components/search-results/search-results.component.ts","./src/app/movies/components/search-results/search-results.component.html","./src/app/movies/components/votes-filter/votes-filter.component.ts","./src/app/movies/components/votes-filter/votes-filter.component.html","./src/app/movies/constants/genre.constants.ts","./src/app/movies/constants/url.constants.ts","./src/app/movies/containers/movies-search-page/movies-search-page.component.ts","./src/app/movies/containers/movies-search-page/movies-search-page.component.html","./src/app/movies/movies.module.ts","./src/app/movies/services/movie-discover.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MoviesSearchPageComponent } from './movies/containers/movies-search-page/movies-search-page.component';\n\nconst ROUTES: Routes = [\n  {\n    path: 'movies',\n    component: MoviesSearchPageComponent\n  },\n  {\n    path: '**',\n    redirectTo: 'movies'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n</div>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MoviesModule } from './movies/movies.module';\n\nconst ANGULAR_IMPORTS = [\n  BrowserModule,\n  HttpClientModule\n];\n\nconst ROUTING_MODULES = [\n  AppRoutingModule\n];\n\nconst EAGER_LOADED_MODULES = [\n  MoviesModule\n];\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    ...ANGULAR_IMPORTS,\n    ...ROUTING_MODULES,\n    ...EAGER_LOADED_MODULES\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { faStar as fasStar } from '@fortawesome/free-solid-svg-icons';\n\nimport { GenreConstants } from '../../constants/genre.constants';\nimport { Genre, Movie } from '../../models';\n\n@Component({\n  selector: 'app-details-view',\n  templateUrl: './details-view.component.html',\n  styleUrls: ['./details-view.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsViewComponent implements OnInit {\n  @Input() details: Movie;\n\n  fasStar = fasStar;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /* Get genre descriptions by ids\n   */\n  getGenres(genreIds: number[]): string {\n    let genresString = '';\n\n    const hasIds = genreIds && genreIds.length;\n    if (hasIds) {\n      genreIds.forEach(id => {\n        const genres: Genre[] = GenreConstants.filter(gen => gen.id === +id);\n\n        const genreFound = genres.length && genres[0] && genres[0].name;\n        if (genreFound) {\n          genresString = genresString + genres[0].name + ', ';\n        }\n      });\n    }\n\n    return genresString.replace(/,\\s*$/, ''); // remove trailing comma\n  }\n\n}\n","<div class=\"details\">\n    <h2 class=\"movie-title\">{{details.title}}</h2>\n    <div class=\"genre-and-votes\">\n        <span class=\"genre\">{{getGenres(details.genre_ids)}}</span>\n        <span class=\"votes\">\n            <fa-icon class=\"star\"\n                     [icon]=\"fasStar\"></fa-icon>{{details.vote_average}}/10 ({{details.vote_count}} votes)\n        </span>\n    </div>\n    <div class=\"original-language\">Original Language: {{details.original_language | uppercase }}</div>\n    <div class=\"release-date\">Release Date: {{details.release_date}}</div>\n    <p class=\"overview\">{{details.overview}}</p>\n</div>","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchBarComponent implements OnInit {\n  @Input() showSpinner: boolean;\n  @Output() search: EventEmitter<string> = new EventEmitter();\n\n  searchTerm: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /* Emit search term\n  */\n  searchText(term: string): void {\n    this.search.emit(term);\n  }\n\n  /* Clear search term and emit the empty string\n   */\n  clearSearchTerm(): void {\n    this.searchTerm = '';\n    this.searchText('');\n  }\n}\n","<form class=\"search-form form-inline\"\n      autocomplete=\"off\"\n      (ngSubmit)=\"searchText(searchTerm)\">\n       <input type=\"text\"\n              class=\"search-input form-control\"\n              name=\"search-input\"\n              [(ngModel)]=\"searchTerm\"\n              place-holder=\"Search\"\n              autofocus />\n       <button class=\"search-button btn btn-primary\"\n               type=\"submit\"\n               [disabled]=\"showSpinner\">\n              <div *ngIf=\"showSpinner; else searchButton\">\n                     <span class=\"spinner-border spinner-border-sm\"></span>\n              </div>\n              <ng-template #searchButton>\n                     Search\n              </ng-template>\n       </button>\n       <button class=\"clear-button btn btn-secondary\"\n               type=\"button\"\n               (click)=\"clearSearchTerm()\">\n              Clear\n       </button>\n</form>","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\n\nimport { Movie } from '../../models';\n\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchResultsComponent implements OnInit, OnChanges {\n\n  @Input() resultsList: Movie[] = [];\n  @Output() selectResult: EventEmitter<Movie> = new EventEmitter();\n\n  selectedItemId: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /* Unselect movie every time results list changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.selectedItemId = 0;\n  }\n\n  /* Scroll to selected element\n  */\n  private scrollToElement(index): void {\n    document.getElementById('result-item-' + index).scrollIntoView();\n  }\n\n  /* Emit selected movie\n  */\n  select(item: Movie, index: number): void {\n    this.selectedItemId = item.id;\n    this.selectResult.emit(item);\n\n    /* Adding timeout to be sure that the scroll changes after the details view is open\n     * (this could be replace by a new input that shows when the detail view is already opened)\n     */\n    setTimeout(\n      () => this.scrollToElement(index)\n    );\n  }\n\n}\n","<div class=\"result-container\">\n    <div class=\"result-item\"\n         [ngClass]=\"{'selected': selectedItemId === result.id}\"\n         *ngFor=\"let result of resultsList; let i = index;\"\n         id=\"{{'result-item-' + i}}\"\n         (click)=\"select(result, i)\">\n\n        <div *ngIf=\"result.poster_path; else emptyImage\">\n            <img src=\"{{'https://image.tmdb.org/t/p/w185' + result.poster_path}}\"\n                 alt=\"{{result.title}}\"\n                 class=\"movie-img\"\n                 data-toggle=\"tooltip\"\n                 data-placement=\"top\"\n                 title=\"{{ result.title }}\" />\n        </div>\n        <ng-template #emptyImage>\n            <div class=\"empty-img\"\n                 data-toggle=\"tooltip\"\n                 data-placement=\"top\"\n                 title=\"{{ result.title }}\">\n                <div class=\"no-img-txt\">{{ result.title }}</div>\n            </div>\n        </ng-template>\n\n    </div>\n    <div *ngIf=\"!resultsList || !resultsList.length\">\n        Oooops, no results!\n    </div>\n</div>","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { faStar as farStar } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as fasStar } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-votes-filter',\n  templateUrl: './votes-filter.component.html',\n  styleUrls: ['./votes-filter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VotesFilterComponent implements OnInit {\n  @Output() vote: EventEmitter<number> = new EventEmitter();\n\n  fasStar = fasStar;\n  farStar = farStar;\n\n  selectedStars: number;\n  unselectedStars: number;\n\n  MAX_STARS = 5;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.resetVotes();\n  }\n\n  /* Initialize votes filter unselecting all the stars\n   */\n  resetVotes(): void {\n    this.selectedStars = 0;\n    this.unselectedStars = this.MAX_STARS;\n    this.setVoteValue(this.selectedStars);\n  }\n\n  /* Update stars selection\n   */\n  updateVotes(starIndex: number, select: boolean): void {\n    const newSelectionIndex = starIndex + (select ? 0 : this.selectedStars);\n    const disableFilter = newSelectionIndex === this.selectedStars;\n\n    this.selectedStars = disableFilter ? 0 : newSelectionIndex;\n    this.unselectedStars = disableFilter ? this.MAX_STARS : this.MAX_STARS - newSelectionIndex;\n\n    this.setVoteValue(this.selectedStars);\n  }\n\n  /* Emit vote value\n  */\n  setVoteValue(voteValue: number): void {\n    this.vote.emit(voteValue);\n  }\n\n}\n","<div class=\"votes-filter\">\n    <h6 class=\"votes-filter-title\">Filter by rating:</h6>\n    <div class=\"votes-filter-stars\">\n        <fa-icon [icon]=\"fasStar\"\n                 *ngFor=\"let star of [].constructor(selectedStars); let i = index\"\n                 (click)=\"updateVotes(i + 1, true)\"\n                 class=\"selected-star\"></fa-icon>\n        <fa-icon [icon]=\"farStar\"\n                 *ngFor=\"let star of [].constructor(unselectedStars); let i = index\"\n                 (click)=\"updateVotes(i + 1, false)\"\n                 class=\"unselected-star\"></fa-icon>\n    </div>\n</div>","import { Genre } from '../models';\r\n\r\nexport const GenreConstants: Genre[] = [\r\n    {\r\n        id: 28,\r\n        name: 'Action'\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'Adventure'\r\n    },\r\n    {\r\n        id: 16,\r\n        name: 'Animation'\r\n    },\r\n    {\r\n        id: 35,\r\n        name: 'Comedy'\r\n    },\r\n    {\r\n        id: 80,\r\n        name: 'Crime'\r\n    },\r\n    {\r\n        id: 99,\r\n        name: 'Documentary'\r\n    },\r\n    {\r\n        id: 18,\r\n        name: 'Drama'\r\n    },\r\n    {\r\n        id: 10751,\r\n        name: 'Family'\r\n    },\r\n    {\r\n        id: 14,\r\n        name: 'Fantasy'\r\n    },\r\n    {\r\n        id: 36,\r\n        name: 'History'\r\n    },\r\n    {\r\n        id: 27,\r\n        name: 'Horror'\r\n    },\r\n    {\r\n        id: 10402,\r\n        name: 'Music'\r\n    },\r\n    {\r\n        id: 9648,\r\n        name: 'Mystery'\r\n    },\r\n    {\r\n        id: 10749,\r\n        name: 'Romance'\r\n    },\r\n    {\r\n        id: 878,\r\n        name: 'Science Fiction'\r\n    },\r\n    {\r\n        id: 10770,\r\n        name: 'TV Movie'\r\n    },\r\n    {\r\n        id: 53,\r\n        name: 'Thriller'\r\n    },\r\n    {\r\n        id: 10752,\r\n        name: 'War'\r\n    },\r\n    {\r\n        id: 37,\r\n        name: 'Western'\r\n    }\r\n];\r\n","const baseUrl = 'https://api.themoviedb.org/3/';\r\n\r\nexport const UrlConstants = {\r\n    API_KEY: 'c8c19f0aef08483bb74150baa6f6a205',\r\n    DISCOVER: baseUrl + 'discover/movie',\r\n    SEARCH: baseUrl + 'search/movie',\r\n};\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { VotesFilterComponent } from '../../components/votes-filter/votes-filter.component';\nimport { Movie } from '../../models';\nimport { MovieDiscoverService } from '../../services/movie-discover.service';\n\n@Component({\n  templateUrl: './movies-search-page.component.html',\n  styleUrls: ['./movies-search-page.component.scss']\n})\nexport class MoviesSearchPageComponent implements OnInit, OnDestroy {\n\n  @ViewChild(VotesFilterComponent)\n  private votesFilterComponent: VotesFilterComponent;\n\n  subscriptions: Subscription = new Subscription();\n\n  moviesResult: Movie[];\n  selectedMovie: Movie;\n  showSpinner: boolean;\n\n  constructor(\n    private movieDiscoverService: MovieDiscoverService\n  ) { }\n\n  ngOnInit(): void {\n    /* Keep subscription open to keep the movies results updates*/\n    this.subscriptions.add(this.movieDiscoverService.moviesResult$.subscribe(result => {\n      this.moviesResult = result?.results ? JSON.parse(JSON.stringify(result.results)) : [];\n      this.resetUserSelections();\n\n      this.showSpinner = false;\n    }));\n    /* Fill the movies results with the discover movies at the init */\n    this.movieDiscoverService.discoverMovies();\n  }\n\n  /*\n   * Search movies by a term\n   */\n  searchMovies(searchTerm: string): void {\n    this.showSpinner = true;\n\n    const hasValidSearchTerm = searchTerm && typeof searchTerm === 'string';\n    if (hasValidSearchTerm) {\n      this.movieDiscoverService.searchMovies(searchTerm);\n    } else {\n      this.movieDiscoverService.discoverMovies();\n    }\n  }\n\n  /*\n   * Filter movies by its rate\n   */\n  filterByVotes(voteValue: number): void {\n    this.selectedMovie = null;\n    const maxRate = voteValue * 2;\n    const minRate = maxRate - 2;\n\n    /* Filter by rate over the full list of movies results */\n    this.movieDiscoverService.moviesResult$.pipe(first()).subscribe(moviesResult => {\n\n      const hasMovies = moviesResult && moviesResult.results && moviesResult.results.length;\n      if (hasMovies) {\n        const results = JSON.parse(JSON.stringify(moviesResult.results));\n        if (maxRate > 0) {\n          this.moviesResult = results.filter((result: Movie) =>\n            result.vote_average <= maxRate && result.vote_average >= minRate\n          );\n        } else {\n          this.moviesResult = results;\n        }\n      }\n\n    });\n  }\n\n  /*\n   * Show selected movie details\n   */\n  showDetails(movie: Movie): void {\n    this.selectedMovie = movie;\n  }\n\n  private resetUserSelections(): void {\n    this.selectedMovie = null;\n    this.votesFilterComponent?.resetVotes();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n}\n","<div class=\"row sticky-top\">\n    <div class=\"col-12 search-movies-header\">\n        <app-search-bar class=\"search-bar\"\n                        [showSpinner]=\"showSpinner\"\n                        (search)=\"searchMovies($event)\"></app-search-bar>\n        <app-votes-filter class=\"votes-bar\"\n                          (vote)=\"filterByVotes($event)\"></app-votes-filter>\n    </div>\n</div>\n<div class=\"row search-movies-content\">\n    <div [ngClass]=\"selectedMovie? 'col-7' : 'col-12'\">\n        <app-search-results [resultsList]=\"moviesResult\"\n                            (selectResult)=\"showDetails($event)\"></app-search-results>\n    </div>\n    <div class=\"col-5\"\n         *ngIf=\"selectedMovie\">\n        <app-details-view [details]=\"selectedMovie\"></app-details-view>\n    </div>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { DetailsViewComponent } from './components/details-view/details-view.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\nimport { SearchResultsComponent } from './components/search-results/search-results.component';\nimport { VotesFilterComponent } from './components/votes-filter/votes-filter.component';\nimport { MoviesSearchPageComponent } from './containers/movies-search-page/movies-search-page.component';\n\n@NgModule({\n  declarations: [\n    DetailsViewComponent,\n    MoviesSearchPageComponent,\n    SearchBarComponent,\n    SearchResultsComponent,\n    VotesFilterComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FontAwesomeModule\n  ],\n  exports: [\n    MoviesSearchPageComponent\n  ]\n})\nexport class MoviesModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { UrlConstants } from '../constants/url.constants';\nimport { MoviesResponse } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieDiscoverService {\n\n  private moviesResultSource: BehaviorSubject<MoviesResponse> = new BehaviorSubject<MoviesResponse>({} as MoviesResponse);\n  moviesResult$: Observable<MoviesResponse> = this.moviesResultSource.asObservable();\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  /**\n   * Return suggested movies sorted by popularity desc\n   */\n  discoverMovies(): void {\n    const url = `${UrlConstants.DISCOVER}?api_key=${UrlConstants.API_KEY}&sort_by=popularity.desc`;\n\n    this.httpClient.get<MoviesResponse>(url).subscribe(\n      result => this.moviesResultSource.next(result)\n    );\n  }\n\n  /**\n   * Search movies using search term\n   */\n  searchMovies(searchTerm: string): void {\n    if (searchTerm && typeof searchTerm === 'string') {\n      const url = `${UrlConstants.SEARCH}?api_key=${UrlConstants.API_KEY}&query=${searchTerm}`;\n\n      this.httpClient.get<MoviesResponse>(url).subscribe(\n        result => this.moviesResultSource.next(result)\n      );\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}